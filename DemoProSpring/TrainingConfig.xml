<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
 		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 		xmlns:aop="http://www.springframework.org/schema/aop"
 		xmlns:tx="http://www.springframework.org/schema/tx"
 		xmlns:p="http://www.springframework.org/schema/p"
 		xmlns:c="http://www.springframework.org/schema/c"
 	
 		xsi:schemaLocation="
 				http://www.springframework.org/schema/beans
 				http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
 				http://www.springframework.org/schema/aop
 				http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
 				http://www.springframework.org/schema/tx
 				http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
 				
 				
 				
	 	 		<bean id="administration" class="com.spring.demo.AdministratorBaen"/>
	 				
 				
 				<!-- <bean id="coreJavaCourse" class="com.spring.demo.CoreJavaCourse">
 				<constructor-arg type="int" value="80"/>
 				<constructor-arg>
 				<list>
 				<value>OOPS</value>
 				<value>Threads</value>
 				<value>IO</value>
 				<value>CollectionS</value>
 				</list></constructor-arg>
 				<constructor-arg  type="double" value="1000"/>
 				
 				</bean>
 				 -->
 				
 				 <!-- <bean id="coreJavaCourse" class="com.spring.demo.CoreJavaCourse">
 				<constructor-arg type="1" value="80"/>
 				<constructor-arg>
 				<list>
 				<value>OOPS</value>
 				<value>Threads</value>
 				<value>IO</value>
 				<value>CollectionS</value>
 				</list></constructor-arg>
 				<constructor-arg  index="2" value="1000"/>
 				</bean> -->
 				
 				 <bean id="coreJavaCourse" class="com.spring.demo.CoreJavaCourse">
 				<constructor-arg value="80"/>
 				<constructor-arg>
 				<list>
 				<value>OOPS</value>
 				<value>Threads</value>
 				<value>IO</value>
 				<value>CollectionS</value>
 				</list></constructor-arg>
 				<constructor-arg value="1000"/> 
 				</bean>
 				 
 				 
 				 <bean id="advancedJavaCourse" class="com.spring.demo.AdvancedJavaCourse">
 				<constructor-arg value="80"/>
 				<constructor-arg>
 				<list>
 				<value>RMI</value>
 				<value>Servlet</value>
 				<value>JDBC</value>
 				<value>JSP</value>
 				</list></constructor-arg>
 				<constructor-arg value="1000"/> 
 				</bean>
 				
 				
 				<bean id="Akash" class="com.spring.demo.AndroidTrainer" p:name="Akash Kamane">
 				<property name="Specialties">
 				<set>
 				<value>android</value>
 				</set> 
 				</property>
 				</bean>
 				
 				<bean id="Deven" class="com.spring.demo.JavaTrainer" p:name="Deven Kenny">
 				<property name="Specialties">
 				<set>
 				<value>android</value>
 				</set> 
 				</property>
 				</bean>
 				
 				
 				<bean id="mikado" class="com.spring.demo.MikadoSolutions"
 				factory-method="getMikadoSolutions">
 				<property name="trainers">
 				<list>
 				<ref bean="Akash"/>
 				<ref bean="Deven"/>
 				</list> 
 				</property>
 				
 				<property name="courses">
 				<list>
 				<ref bean="coreJavaCourse"/>
 				<ref bean="advancedJavaCourse"/>
 				</list> 
 				</property>
 				
 				<property name="courseTrainers">
 				<map>
 				<entry key-ref="coreJavaCourse" value-ref="Akash"/>
 				<entry key-ref="advancedJavaCourse" value-ref="Deven"/>
 				</map> 
 				</property>
 				
 				</bean>
 				
 				<bean id="trainingWorkshop" class="com.spring.demo.TrainingWorkshop"
 					p:trainingCompany-ref="mikado"/>
 				
 			<!-- <bean id="participants" class="com.spring.demo.Participants" />
 			<aop:config>
 			<aop:aspect ref="participants">
 			<aop:before pointcut="execution(*
 			com.spring.demo.JavaTrainer.train(..))" method="takeSeat"/>
 			<aop:before pointcut="execution(* com.spring.demo.JavaTrainer.train(..))" method="switchOffPhones"/>
 			<aop:after-returning pointcut="execution(*
 			com.spring.demo.JavaTrainer.train(..))" method="applaud"/>
 			<aop:after-throwing pointcut="execution(*
 			com.spring.demo.JavaTrainer.train(..))" method="claimRefund"/>
 			</aop:aspect>
 			</aop:config>	 -->
 			
 			 <bean id="participants" class="com.spring.demo.Annotation.Participants" />
 			 
 			<!--<aop:config>
 			<aop:aspect ref="participants">
 			<aop:pointcut id="training" expression="execution(* com.spring.demo.JavaTrainer.train(..))" />
 			<aop:before pointcut-ref="training" method="takeSeat"/>
 			<aop:before pointcut-ref="training" method="switchOffPhones"/>
 			<aop:after-returning pointcut-ref="training" method="applaud"/>
 			<aop:after-throwing pointcut-ref="training" method="claimRefund"/>
 		
 			</aop:aspect>
 			</aop:config> -->
 				 
 			 <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
 			 
 				<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
 				<property name="url" value="jdbc:oracle:thin:@localhost:1521:orcl"/>
 				<property name="username" value="system"/>
 				<property name="password" value="SYSTEM"/>
 				
 				<!-- </bean>
 				<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
 				<constructor-arg ref="dataSource"/>
 				</bean>
 				
 				<bean id="employeedao" class="com.spring.DA.EmployeeeDAO">
 				<property name="jdbcTemplate" ref="jdbcTemplate"/>
 				</bean> -->
 				</bean>
 				
 				<bean id="simpleTemplate" class="org.springframework.jdbc.core.simple.SimpleJdbcTemplate">
 				<constructor-arg ref="dataSource"/>
 				</bean>
 				
 				<bean id="employeedao" class="com.spring.DA.EmployeeeDAO">
 				<property name="simpleJdbcTemplate" ref="simpleJdbcjdbcTemplate"/>
 				</bean>
 				<aop:aspectj-autoproxy/>	
 					 
 			 <aop:config>
 					<aop:aspect ref="participants">
 					<aop:pointcut id="multitraining" expression="execution(* com.spring.demo.JavaDotNetTrainer.train(String)) and args(technology)" />
 					<aop:before pointcut-ref="multitraining" method="predictTraining" arg-names="technology" />
 				</aop:aspect>		 
	 		</aop:config>
	
 				<!-- <aop:aspect ref="xyz">
 				<aop:declare-parents 
 				type-matching="com.spring.demo.Trainer+"
 				implement-interface="com.spring.demol.Employee"
 				default-imp1="com.spring.demo.EmployeeImp1"/>
 				</aop:aspect> -->
 				
 				</beans>